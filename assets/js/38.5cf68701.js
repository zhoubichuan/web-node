(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{313:function(_,e,v){"use strict";v.r(e);var a=v(13),t=Object(a.a)({},(function(){var _=this,e=_._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[e("h1",{attrs:{id:"十-cache"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#十-cache"}},[_._v("#")]),_._v(" 十.cache")]),_._v(" "),e("h3",{attrs:{id:"_1-是否禁止缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-是否禁止缓存"}},[_._v("#")]),_._v(" 1.是否禁止缓存")]),_._v(" "),e("ul",[e("li",[_._v("禁止缓存指的是缓存中不得存储任何关于客户端请求和服务端响应的内容，每次由客户端发起的请求都会下载完整的响应内容。")]),_._v(" "),e("li",[_._v("在请求头中，"),e("code",[_._v("Cache-Control:no-store")]),_._v("与"),e("code",[_._v("Pragma:no-cache")]),_._v("都可以禁止缓存\n"),e("ul",[e("li",[e("code",[_._v("Pragma:no-cache")]),_._v("可以兼容"),e("code",[_._v("http 1.0")])]),_._v(" "),e("li",[e("code",[_._v("Cache-Control:no-store")]),_._v("是"),e("code",[_._v("http 1.1")]),_._v("提供的")])])])]),_._v(" "),e("h3",{attrs:{id:"_2-是否检查本地副本是否过期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-是否检查本地副本是否过期"}},[_._v("#")]),_._v(" 2.是否检查本地副本是否过期")]),_._v(" "),e("p",[_._v("是否检查本地版本是否过期主要是由"),e("code",[_._v("Cache-Contro")]),_._v("的"),e("code",[_._v("no-cache")]),_._v("和"),e("code",[_._v("must-revalidate")]),_._v("这两个可选值控制，其中：")]),_._v(" "),e("ul",[e("li",[e("code",[_._v("no-cache")]),_._v("告诉浏览器、缓存服务器，不管本地副本是否过期，使用资源副本前，一定要到源服务器进行副本有效性校验。")]),_._v(" "),e("li",[e("code",[_._v("must-revalidate")]),_._v("告诉浏览器、缓存服务器，本地副本过期前，可以使用本地副本；本地副本一旦过期，必须去源服务器进行有效性校验。")])]),_._v(" "),e("h3",{attrs:{id:"_3-本地副本是否过期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-本地副本是否过期"}},[_._v("#")]),_._v(" 3.本地副本是否过期")]),_._v(" "),e("p",[_._v("想要知道本地副本是否过期，我们就要了解缓存的过期机制")]),_._v(" "),e("ul",[e("li",[_._v("1.过期机制中，最重要的指令是"),e("code",[_._v("max-age=<seconds>")]),_._v(",它表示资源能够被缓存的最大时间;它通常会和"),e("code",[_._v("must-revalidate")]),_._v("一起使用")])]),_._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[_._v("Cache-Control:nax-age=60,must-revalidate\n")])]),_._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[_._v("1")]),e("br")])]),e("ul",[e("li",[_._v("2.如果不含有"),e("code",[_._v("max-age")]),_._v("属性，则会去查看是否包含"),e("code",[_._v("Expires")]),_._v("属性，通过比较"),e("code",[_._v("Expires")]),_._v("的值和响应头里面"),e("code",[_._v("Date")]),_._v("属性的值来判断缓存是否有效。")]),_._v(" "),e("li",[_._v("3.如果"),e("code",[_._v("max-age")]),_._v("和"),e("code",[_._v("expires")]),_._v("属性都没有，可以查看响应头里面的"),e("code",[_._v("Last-Modifined")]),_._v("信息。如果有，缓存的寿命就等于响应头里面"),e("code",[_._v("Date")]),_._v("的值减去"),e("code",[_._v("Last-Modified")]),_._v("的值除以 10")])]),_._v(" "),e("h3",{attrs:{id:"_4-如果本地副本没有过期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-如果本地副本没有过期"}},[_._v("#")]),_._v(" 4.如果本地副本没有过期")]),_._v(" "),e("p",[_._v("如果本地副本没有过期，自会直接从缓存中读取资源，并返回 200 状态")]),_._v(" "),e("h3",{attrs:{id:"_5-如果副本过期"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-如果副本过期"}},[_._v("#")]),_._v(" 5.如果副本过期")]),_._v(" "),e("p",[_._v("如果副本过期，则会进行到源服务器进行有效性校验的前期准备")]),_._v(" "),e("ul",[e("li",[_._v("首先，会在请求头里寻找"),e("code",[_._v("If-None-Match")]),_._v("字段，其值为服务器上次返回的"),e("code",[_._v("ETag")]),_._v("响应头的值：")]),_._v(" "),e("li",[_._v("如果请求头里面没有"),e("code",[_._v("if-None-Match")]),_._v("字段，怎会在请求头中寻找"),e("code",[_._v("if-Modified-Since")]),_._v("字段，其值为服务器上次返回的"),e("code",[_._v("Last-Modified")]),_._v("响应头中的日期值")])]),_._v(" "),e("h3",{attrs:{id:"_6-到源服务器进行有效性校验"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-到源服务器进行有效性校验"}},[_._v("#")]),_._v(" 6.到源服务器进行有效性校验")]),_._v(" "),e("p",[_._v("如果请求头中带有"),e("code",[_._v("if-None-Match")]),_._v("或"),e("code",[_._v("if-Modified-Since")]),_._v(",则会到源服务器机进行有效性校验，如果源服务器资源没有变化，则返回 304，如果有变化，则返回 200")])])}),[],!1,null,null,null);e.default=t.exports}}]);